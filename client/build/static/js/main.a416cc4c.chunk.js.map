{"version":3,"sources":["assets/stairs.mp3","Components/Header.js","Components/MUInput.js","Components/LoginForm.js","pages/Login.js","Components/FriendsTab.js","Components/MessagesTab.js","Components/MainChat.js","pages/Chat.js","Components/ProtectedRoute.js","Components/RegisterForm.js","pages/Register.js","App.js","serviceWorker.js","states/reducers/authReducer.js","states/reducers/chatReducer.js","states/reducers/rootReducer.js","states/sagas/authSaga.js","states/sagas/chatSaga.js","states/sagas/sagas.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","connect","state","loggedIn","auth","user","dispatch","logOut","type","classes","AppBar","position","Toolbar","IconButton","edge","className","color","aria-label","Typography","variant","Grid","container","justify","alignItems","item","username","Button","onClick","to","style","textDecoration","fullWidth","width","MUInput","label","value","errorMessage","onChange","TextField","helperText","error","length","center","textAlign","mgTop","marginTop","inputFields","errorMessages","userLogin","payload","setInputFields","resetIE","history","useHistory","useEffect","unlisten","listen","location","action","useState","keep","setKeep","handleLogin","e","a","direction","xs","md","target","password","FormHelperText","other","FormControlLabel","control","Checkbox","checked","name","size","push","Login","document","Friends","socket","friends","setRead","selectedIndex","setSelectedIndex","scrollToBottom","useLayoutEffect","updateSize","ref","current","setProperty","getElementById","clientHeight","window","addEventListener","removeEventListener","useRef","Box","component","sm","lg","xl","display","List","id","overflowY","map","index","ListItem","key","button","selected","unRead","handleContactChange","ListItemAvatar","Avatar","alt","src","ListItemText","primary","Badge","MessagesTab","setFriends","scrollToTop","handleMessages","msg","temp","sender","friendIndex","findIndex","friend","receiver","console","log","messageIndex","messages","message","pending","foundIndex","splice","muted","play","io","on","off","setMessage","handleSendMessage","setTimeout","emit","paddingLeft","require","padding","CircularProgress","onKeyPress","height","div","scrollTop","scrollHeight","scroll","top","left","behavior","chat","Chat","wrap","ProtectedRoute","Component","condition","redirectTo","rest","render","props","userAvailable","userRegister","checkUserName","handleRegister","Register","isLoading","checkLogin","path","exact","Boolean","hostname","match","emptyInputs","emptyError","initialState","loginReducer","chatReducer","rootReducer","combineReducers","authReducer","userLogout","put","call","fetch","res","json","data","newAction","method","headers","body","JSON","stringify","status","info","result","friendName","mySaga","takeLatest","enhanser","store","sagaMiddleware","createSagaMiddleware","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","createStore","err","run","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a416cc4c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/stairs.ac905963.mp3\";","import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction Header({ loggedIn, logOut, user }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          className={classes.menuButton}\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n        ></IconButton>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          Chat\r\n        </Typography>\r\n        {loggedIn ? (\r\n          <Grid container justify=\"flex-end\" alignItems=\"center\" spacing={2}>\r\n            <Grid item>\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                {user.username}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button color=\"inherit\" onClick={logOut}>\r\n                Logout\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        ) : (\r\n          <Button color=\"inherit\">\r\n            <Link\r\n              to=\"/login\"\r\n              style={{ textDecoration: \"none\", color: \"white\" }}\r\n            >\r\n              Login\r\n            </Link>\r\n          </Button>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loggedIn: state.auth.loggedIn,\r\n    user: state.auth.user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logOut: () => dispatch({ type: \"USER_LOGOUT\" }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  fullWidth: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nexport default function MUInput({\r\n  label,\r\n  value,\r\n  type,\r\n  errorMessage,\r\n  onChange,\r\n}) {\r\n  const classes = useStyles();\r\n  return (\r\n    <TextField\r\n      variant=\"outlined\"\r\n      type={type}\r\n      className={classes.fullWidth}\r\n      label={label}\r\n      value={value}\r\n      helperText={errorMessage}\r\n      error={errorMessage ? errorMessage.length !== 0 : false}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport MUInput from \"../Components/MUInput\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  center: {\r\n    textAlign: \"center\",\r\n  },\r\n  mgTop: {\r\n    marginTop: \"15px\",\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nfunction LoginForm({\r\n  userLogin,\r\n  errorMessages,\r\n  inputFields,\r\n  setInputFields,\r\n  resetIE,\r\n}) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const unlisten = history.listen((location, action) => {\r\n      resetIE();\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    };\r\n  }, [history, resetIE]);\r\n\r\n  const [keep, setKeep] = useState(true);\r\n\r\n  const handleLogin = async (e) => {\r\n    userLogin({ ...inputFields, keep, history });\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      container\r\n      spacing={2}\r\n      direction=\"column\"\r\n      className={classes.mgTop}\r\n      xs={10}\r\n      md={4}\r\n    >\r\n      <Typography className={classes.center} variant=\"h2\">\r\n        Login\r\n      </Typography>\r\n      <Grid item>\r\n        <MUInput\r\n          label=\"User Name\"\r\n          type=\"text\"\r\n          value={inputFields.username}\r\n          onChange={(e) => {\r\n            setInputFields({ ...inputFields, username: e.target.value });\r\n          }}\r\n          errorMessage={errorMessages.username}\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <MUInput\r\n          label=\"Password\"\r\n          type=\"Password\"\r\n          value={inputFields.password}\r\n          onChange={(e) => {\r\n            setInputFields({ ...inputFields, password: e.target.value });\r\n          }}\r\n          errorMessage={errorMessages.password}\r\n        />\r\n      </Grid>\r\n      <FormHelperText error>{errorMessages.other}</FormHelperText>\r\n      <Grid item>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={keep}\r\n              onChange={() => setKeep(!keep)}\r\n              name=\"checkedB\"\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Keep Me Logged In\"\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          className={classes.fullWidth}\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleLogin}\r\n        >\r\n          Login\r\n        </Button>\r\n      </Grid>\r\n      <Button onClick={() => history.push(\"/register\")}> Register </Button>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    inputFields: state.auth.inputFields,\r\n    errorMessages: state.auth.errorMessages,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    userLogin: (payload) =>\r\n      dispatch({\r\n        type: \"USER_LOGIN\",\r\n        payload,\r\n      }),\r\n    setInputFields: (payload) =>\r\n      dispatch({ type: \"SET_INPUT_FIELDS\", payload }),\r\n    resetIE: () => dispatch({ type: \"RESET_IE\" }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","import React, { useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport Header from \"../Components/Header\";\r\nimport LoginForm from \"../Components/LoginForm\";\r\n\r\nfunction Login() {\r\n  useEffect(() => {\r\n    document.title = \"Login\";\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"center\">\r\n      <Header />\r\n      <Grid item xs={1} md={4} />\r\n      <LoginForm />\r\n      <Grid item xs={1} md={4} />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useRef, useEffect, useLayoutEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  Typography,\r\n  Box,\r\n  ListItemText,\r\n  Badge,\r\n} from \"@material-ui/core\";\r\n\r\nfunction Friends({\r\n  friends,\r\n  setRead,\r\n  selectedIndex,\r\n  setSelectedIndex,\r\n  scrollToBottom,\r\n}) {\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      ref.current.style.setProperty(\r\n        \"height\",\r\n        `${document.getElementById(\"root\").clientHeight - 124}px`\r\n      );\r\n    }\r\n    window.addEventListener(\"resize\", updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [selectedIndex]);\r\n\r\n  const handleContactChange = (index) => {\r\n    setSelectedIndex(index);\r\n\r\n    // if the messages aren't read\r\n    if (friends[index].unRead) setRead(friends, index);\r\n  };\r\n\r\n  const ref = useRef();\r\n\r\n  return (\r\n    <Box\r\n      item\r\n      component={Grid}\r\n      sm={4}\r\n      lg={3}\r\n      xl={2}\r\n      display={{ xs: \"none\", sm: \"block\" }}\r\n    >\r\n      <Typography variant=\"h4\">Friends</Typography>\r\n      <List\r\n        ref={ref}\r\n        id=\"friends\"\r\n        style={{\r\n          overflowY: \"scroll\",\r\n        }}\r\n      >\r\n        {friends.map((item, index) => {\r\n          return (\r\n            <ListItem\r\n              key={index}\r\n              button\r\n              selected={selectedIndex === index}\r\n              onClick={() => handleContactChange(index)}\r\n            >\r\n              <ListItemAvatar>\r\n                <Avatar\r\n                  alt={item.username}\r\n                  src={`/static/images/avatar/${index + 1}.jpg`}\r\n                />\r\n              </ListItemAvatar>\r\n              <ListItemText primary={item.username} />\r\n              {item.unRead ? <Badge color=\"secondary\" variant=\"dot\" /> : null}\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </List>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Friends;\r\n","import React, { useState, useEffect, useLayoutEffect, useRef } from \"react\";\r\nimport {\r\n  Grid,\r\n  List,\r\n  Typography,\r\n  Button,\r\n  ListItemText,\r\n  TextField,\r\n  CircularProgress,\r\n  ListItem,\r\n} from \"@material-ui/core\";\r\n\r\nimport io from \"socket.io-client\";\r\n\r\nlet socket;\r\n\r\nfunction MessagesTab({\r\n  friends,\r\n  setFriends,\r\n  setRead,\r\n  selectedIndex,\r\n  setSelectedIndex,\r\n  user,\r\n  scrollToBottom,\r\n  scrollToTop,\r\n}) {\r\n  const handleMessages = (msg) => {\r\n    let temp = [...friends];\r\n\r\n    // if the message confirmation\r\n    if (msg.sender === user.username) {\r\n      const friendIndex = temp.findIndex(\r\n        (friend) => friend.username === msg.receiver\r\n      );\r\n      console.log(friendIndex);\r\n      console.log(temp);\r\n      console.log(msg.receiver);\r\n      const messageIndex = temp[friendIndex].messages.findIndex(\r\n        (message) => message.pending && message.message === msg.message\r\n      );\r\n\r\n      // removing pending\r\n      temp[friendIndex].messages[messageIndex].pending = false;\r\n    }\r\n    // if we received a message from another user\r\n    else {\r\n      const foundIndex = temp.findIndex(\r\n        (friend) => friend.username === msg.sender\r\n      );\r\n\r\n      // sender in friends\r\n      if (foundIndex !== -1) {\r\n        temp[foundIndex].messages.push(msg);\r\n        // if we are in the senders chat we make the message read\r\n        // and change the senders chat to be on top\r\n        if (foundIndex === selectedIndex) {\r\n          setRead(friends, foundIndex);\r\n          setSelectedIndex(0);\r\n          scrollToTop();\r\n        }\r\n        // else we make it unRead\r\n        else {\r\n          temp[foundIndex].unRead = true;\r\n          if (foundIndex > selectedIndex) setSelectedIndex(selectedIndex + 1);\r\n        }\r\n\r\n        // getting the sender friend from the array\r\n        const friend = temp[foundIndex];\r\n        //delteting the friend from the array\r\n        temp.splice(foundIndex, 1);\r\n        // pushing it again at the beggining\r\n        temp.splice(0, 0, friend);\r\n      }\r\n      // sender isn't in friends (so we add it)\r\n      else {\r\n        console.log(temp);\r\n        temp.splice(0, 0, {\r\n          username: msg.sender,\r\n          messages: [msg],\r\n          unRead: true,\r\n        });\r\n        console.log(temp);\r\n        setSelectedIndex(selectedIndex + 1);\r\n      }\r\n\r\n      // playing receive message sound\r\n      document.getElementById(\"notification\").muted = false;\r\n      document.getElementById(\"notification\").play();\r\n    }\r\n\r\n    console.log(\"81\");\r\n    setFriends(temp);\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [friends]);\r\n\r\n  useEffect(() => {\r\n    socket = io(\"/\");\r\n\r\n    // received a message\r\n    console.log(\"on\");\r\n    socket.on(user.username, handleMessages);\r\n\r\n    return () => {\r\n      // i'm adding and removing listner because selected Index\r\n      //didn't change inside this methode socket.on('')\r\n      // same thing happend with friends\r\n      console.log(\"off\");\r\n      socket.off(user.username);\r\n    };\r\n  }, [user.username, selectedIndex, friends]);\r\n\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      ref.current.style.setProperty(\r\n        \"height\",\r\n        `${document.getElementById(\"root\").clientHeight - 185}px`\r\n      );\r\n    }\r\n    window.addEventListener(\"resize\", updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, []);\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const ref = useRef();\r\n\r\n  const handleSendMessage = () => {\r\n    setMessage(\"\");\r\n\r\n    const receiver = {\r\n      receiver: friends[selectedIndex].username,\r\n      message,\r\n      pending: true,\r\n    };\r\n\r\n    const temp = friends.map((friend) => {\r\n      if (friend.username === receiver.receiver) {\r\n        friend.messages.push({\r\n          sender: user.username,\r\n          message,\r\n          pending: true,\r\n        });\r\n      }\r\n      return friend;\r\n    });\r\n\r\n    setTimeout(() => {\r\n      socket.emit(\"message\", receiver);\r\n    }, 300);\r\n\r\n    setFriends(temp);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      container\r\n      style={{ paddingLeft: 15 }}\r\n      direction=\"column\"\r\n      xs={12}\r\n      sm={8}\r\n      lg={9}\r\n      xl={10}\r\n    >\r\n      <audio id=\"notification\" src={require(\"../assets/stairs.mp3\")} muted />\r\n      <Grid item container direction=\"column\" justify=\"flex-end\">\r\n        <Typography variant=\"h4\">\r\n          {friends.length > 0 && friends.length > selectedIndex\r\n            ? friends[selectedIndex].username\r\n            : \"Messages\"}\r\n        </Typography>\r\n        <List\r\n          id=\"messages\"\r\n          ref={ref}\r\n          style={{\r\n            overflowY: \"scroll\",\r\n          }}\r\n        >\r\n          {friends.length > 0 &&\r\n          friends.length > selectedIndex &&\r\n          friends[selectedIndex].messages.length > 0\r\n            ? friends[selectedIndex].messages.map((message, index) => (\r\n                <ListItem style={{ padding: 0 }} key={index}>\r\n                  <ListItemText\r\n                    style={{\r\n                      width: \"60%\",\r\n                    }}\r\n                  >{`${message.sender}: ${message.message}`}</ListItemText>\r\n                  {message.pending ? (\r\n                    <CircularProgress\r\n                      size={25}\r\n                      style={{\r\n                        marginRight: \"10px\",\r\n                      }}\r\n                    />\r\n                  ) : null}\r\n                </ListItem>\r\n              ))\r\n            : null}\r\n        </List>\r\n      </Grid>\r\n      <Grid item container>\r\n        <Grid item xs={10}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            style={{ width: \"100%\" }}\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            onKeyPress={(e) => {\r\n              if (e.key == \"Enter\") handleSendMessage();\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <Button\r\n            style={{ height: \"100%\", width: \"100%\" }}\r\n            variant=\"text\"\r\n            onClick={handleSendMessage}\r\n          >\r\n            Send\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default MessagesTab;\r\n","import React, { useState, useLayoutEffect, useRef } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Friends from \"./FriendsTab\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport MessagesTab from \"./MessagesTab\";\r\n\r\n// scroll messages to bottoms\r\nfunction scrollToBottom() {\r\n  let div = document.getElementById(\"messages\");\r\n  div.scrollTop = div.scrollHeight - div.clientHeight;\r\n}\r\n\r\n// scroll friends to top\r\nfunction scrollToTop() {\r\n  let friends = document.getElementById(\"friends\");\r\n  friends.scroll({\r\n    top: 0,\r\n    left: 0,\r\n    behavior: \"smooth\",\r\n  });\r\n}\r\n\r\nfunction MainChat({\r\n  user,\r\n  friends,\r\n  setFriends,\r\n  setRead,\r\n  selectedIndex,\r\n  setSelectedIndex,\r\n}) {\r\n  useLayoutEffect(() => {\r\n    function updateSize() {\r\n      ref.current.style.setProperty(\r\n        \"height\",\r\n        `${document.getElementById(\"root\").clientHeight - 65}px`\r\n      );\r\n    }\r\n    window.addEventListener(\"resize\", updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, []);\r\n\r\n  const ref = useRef();\r\n\r\n  return (\r\n    <Grid item container direction=\"row\" ref={ref}>\r\n      <Friends\r\n        friends={friends}\r\n        setRead={setRead}\r\n        selectedIndex={selectedIndex}\r\n        setSelectedIndex={setSelectedIndex}\r\n        scrollToBottom={scrollToBottom}\r\n      />\r\n      <MessagesTab\r\n        user={user}\r\n        friends={friends}\r\n        setFriends={setFriends}\r\n        setRead={setRead}\r\n        selectedIndex={selectedIndex}\r\n        setSelectedIndex={setSelectedIndex}\r\n        scrollToBottom={scrollToBottom}\r\n        scrollToTop={scrollToTop}\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.auth.user,\r\n    friends: state.chat.friends,\r\n    selectedIndex: state.chat.selectedIndex,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setFriends: (friends) => {\r\n      dispatch({ type: \"SET_FRIENDS\", payload: { friends } });\r\n    },\r\n    setRead: (friends, index) => {\r\n      dispatch({ type: \"SET_READ\", payload: { friends, index } });\r\n    },\r\n    setSelectedIndex: (selectedIndex) => {\r\n      dispatch({ type: \"SET_SELECTED_INDEX\", payload: { selectedIndex } });\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainChat);\r\n","import React, { useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Header from \"../Components/Header\";\r\n\r\nimport MainChat from \"../Components/MainChat\";\r\n\r\nfunction Chat() {\r\n  useEffect(() => {\r\n    document.title = \"Chat\";\r\n  }, []);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      wrap=\"nowrap\"\r\n      style={{ height: \"100vh\" }}\r\n      alignItems=\"stretch\"\r\n    >\r\n      <Grid item>\r\n        <Header title=\"Chat\" />\r\n      </Grid>\r\n      <MainChat />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({\r\n  component: Component,\r\n  condition,\r\n  redirectTo,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (condition) return <Component {...rest} {...props} />;\r\n        else return <Redirect to={redirectTo} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { useEffect } from \"react\";\r\nimport { Typography, Button, Grid } from \"@material-ui/core\";\r\nimport MUInput from \"../Components/MUInput\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  center: {\r\n    textAlign: \"center\",\r\n  },\r\n  mgTop: {\r\n    marginTop: \"15px\",\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nfunction RegisterForm({\r\n  checkUserName,\r\n  userRegister,\r\n  errorMessages,\r\n  inputFields,\r\n  setInputFields,\r\n  resetIE,\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const unlisten = history.listen((location, action) => {\r\n      resetIE();\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    };\r\n  }, [history, resetIE]);\r\n\r\n  const handleRegister = async (e) => {\r\n    userRegister({ ...inputFields, history });\r\n  };\r\n\r\n  const handleUserNameChange = (e) => {\r\n    setInputFields({ ...inputFields, username: e.target.value });\r\n    checkUserName(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      container\r\n      direction=\"column\"\r\n      className={classes.mgTop}\r\n      xs={10}\r\n      md={4}\r\n      spacing={2}\r\n    >\r\n      <Typography className={classes.center} variant=\"h2\">\r\n        Register\r\n      </Typography>\r\n      <Grid item>\r\n        <MUInput\r\n          label=\"User Name\"\r\n          type=\"text\"\r\n          value={inputFields.username}\r\n          onChange={handleUserNameChange}\r\n          errorMessage={errorMessages.username}\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <MUInput\r\n          label=\"Password\"\r\n          type=\"Password\"\r\n          value={inputFields.password}\r\n          onChange={(e) =>\r\n            setInputFields({ ...inputFields, password: e.target.value })\r\n          }\r\n          errorMessage={errorMessages.password}\r\n        />\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          className={classes.fullWidth}\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleRegister}\r\n          type=\"submit\"\r\n        >\r\n          Register\r\n        </Button>\r\n      </Grid>\r\n      <Button onClick={() => history.push(\"/login\")}> Login </Button>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    inputFields: state.auth.inputFields,\r\n    errorMessages: state.auth.errorMessages,\r\n    userAvailable: state.auth.userAvailable,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    userRegister: (payload) =>\r\n      dispatch({\r\n        type: \"USER_REGISTER\",\r\n        payload,\r\n      }),\r\n    checkUserName: (username) => {\r\n      dispatch({\r\n        type: \"CHECK_USERNAME\",\r\n        payload: { username },\r\n      });\r\n    },\r\n    setInputFields: (payload) =>\r\n      dispatch({ type: \"SET_INPUT_FIELDS\", payload }),\r\n    resetIE: () => dispatch({ type: \"RESET_IE\" }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);\r\n","import React, { useEffect } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport Header from \"../Components/Header\";\r\nimport RegisterForm from \"../Components/RegisterForm\";\r\n\r\nfunction Register() {\r\n  useEffect(() => {\r\n    document.title = \"Register\";\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container direction=\"row\" justify=\"center\">\r\n      <Header title=\"Register\" />\r\n      <Grid item xs={1} md={4} />\r\n      <RegisterForm />\r\n      <Grid item xs={1} md={4} />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Chat from \"./pages/Chat\";\nimport ProtectedRoute from \"./Components/ProtectedRoute\";\nimport { connect } from \"react-redux\";\nimport Register from \"./pages/Register\";\n\nfunction App({ checkLogin, loggedIn, isLoading }) {\n  useEffect(() => {\n    checkLogin();\n  }, [checkLogin]);\n\n  if (isLoading) return \"loading\";\n\n  return (\n    <Router>\n      <ProtectedRoute\n        path=\"/\"\n        exact\n        component={Chat}\n        condition={loggedIn}\n        redirectTo=\"/login\"\n      />\n      <ProtectedRoute\n        path=\"/login\"\n        exact\n        component={Login}\n        condition={!loggedIn}\n        redirectTo=\"/\"\n      />\n      <ProtectedRoute\n        path=\"/register\"\n        exact\n        component={Register}\n        condition={!loggedIn}\n        redirectTo=\"/\"\n      />\n      <ProtectedRoute\n        path=\"/chat\"\n        exact\n        component={Chat}\n        condition={loggedIn}\n        redirectTo=\"/login\"\n      />\n    </Router>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loggedIn: state.auth.loggedIn,\n    isLoading: state.auth.isLoading,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    checkLogin: () => dispatch({ type: \"CHECK_LOGIN\" }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// to save time\r\nconst emptyInputs = { username: \"\", password: \"\" };\r\nconst emptyError = { username: \"\", password: \"\", other: \"\" };\r\n\r\nconst initialState = {\r\n  loggedIn: false,\r\n  user: {},\r\n  isLoading: true,\r\n  inputFields: emptyInputs,\r\n  errorMessages: emptyError,\r\n};\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n  //console.log(action);\r\n  switch (action.type) {\r\n    case \"CHECK_LOGIN_ASYNC\":\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isLoading: false,\r\n      };\r\n    case \"USER_LOGIN_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        loggedIn: true,\r\n        errorMessages: emptyError,\r\n        ...action.payload,\r\n      };\r\n    case \"USER_LOGIN_FAILED\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        loggedIn: false,\r\n        user: {},\r\n        ...action.payload,\r\n      };\r\n    case \"USER_REGISTER_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        errorMessages: emptyError,\r\n        isLoading: false,\r\n        loggedIn: false,\r\n        user: {},\r\n      };\r\n    case \"USER_REGISTER_FAILED\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        loggedIn: false,\r\n        user: {},\r\n        ...action.payload,\r\n      };\r\n    case \"CHECK_USERNAME_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    case \"CHECK_USERNAME_FAILED\":\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    case \"SET_INPUT_FIELDS\":\r\n      return {\r\n        ...state,\r\n        inputFields: action.payload,\r\n      };\r\n    case \"RESET_IE\": {\r\n      return {\r\n        ...state,\r\n        inputFields: emptyInputs,\r\n        errorMessages: emptyError,\r\n      };\r\n    }\r\n\r\n    case \"USER_LOGOUT_ASYNC\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        loggedIn: action.loggedIn,\r\n        user: action.user,\r\n        errorMessages: emptyError,\r\n      };\r\n    case \"SET_AUTH_LOADING\":\r\n      return { ...state, isLoading: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loginReducer;\r\n","const initialState = {\r\n  friends: [],\r\n  selectedIndex: 0,\r\n};\r\n\r\nconst chatReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_FRIENDS\":\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    case \"SET_SELECTED_INDEX\": {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default chatReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport chatReducer from \"./chatReducer\";\r\n\r\nconst rootReducer = combineReducers({ auth: authReducer, chat: chatReducer });\r\n\r\nexport default rootReducer;\r\n","import { put, call } from \"redux-saga/effects\";\r\n\r\n// check if the user is logged in\r\nexport function* checkLogin() {\r\n  yield put({ type: \"SET_AUTH_LOADING\" });\r\n\r\n  let friends;\r\n\r\n  const newAction = yield call(async () => {\r\n    try {\r\n      const res = await fetch(\"/auth/check/loggedin\");\r\n\r\n      const data = await res.json();\r\n\r\n      const loggedIn = data.loggedIn;\r\n      const user = { username: data.user.username };\r\n      friends = data.user.friends;\r\n\r\n      return {\r\n        type: \"CHECK_LOGIN_ASYNC\",\r\n        payload: { loggedIn, user },\r\n      };\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    return { type: \"CHECK_LOGIN_ASYNC\" };\r\n  });\r\n\r\n  if (friends) yield put({ type: \"SET_FRIENDS\", payload: { friends } });\r\n\r\n  yield put(newAction);\r\n}\r\n\r\n// login the user\r\nexport function* userLogin({ payload }) {\r\n  let friends;\r\n  const { username, password, history } = payload;\r\n\r\n  yield put({ type: \"SET_AUTH_LOADING\" });\r\n\r\n  const newAction = yield call(async () => {\r\n    try {\r\n      const res = await fetch(\"/auth/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n\r\n      switch (res.status) {\r\n        case 200: {\r\n          history.push(\"/chat\");\r\n          let user = await res.json();\r\n\r\n          friends = user.friends;\r\n          user = { username: user.username };\r\n\r\n          return { type: \"USER_LOGIN_SUCCESS\", payload: { user } };\r\n        }\r\n        case 400: {\r\n          const info = await res.json();\r\n          let errorMessages = {};\r\n          if (info.index === 0) errorMessages.username = info.message;\r\n          else errorMessages.password = info.message;\r\n\r\n          return {\r\n            type: \"USER_LOGIN_FAILED\",\r\n            payload: { errorMessages },\r\n          };\r\n        }\r\n        case 500: {\r\n          return {\r\n            type: \"USER_LOGIN_FAILED\",\r\n            payload: {\r\n              errorMessages: {\r\n                other: \"There is a problem with the Server\",\r\n              },\r\n            },\r\n          };\r\n        }\r\n        default: {\r\n          return {\r\n            type: \"USER_LOGIN_FAILED\",\r\n            payload: {\r\n              errorMessages: {\r\n                other: \"Something went Wrong\",\r\n              },\r\n            },\r\n          };\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    return {\r\n      type: \"USER_LOGIN_FAILED\",\r\n      payload: {\r\n        errorMessages: {\r\n          other: \"Something went Wrong\",\r\n        },\r\n      },\r\n    };\r\n  });\r\n\r\n  if (friends) yield put({ type: \"SET_FRIENDS\", payload: { friends } });\r\n\r\n  yield put(newAction);\r\n}\r\n\r\n// register the user\r\nexport function* userRegister({ payload }) {\r\n  yield put({ type: \"SET_AUTH_LOADING\" });\r\n\r\n  const newAction = yield call(async () => {\r\n    const { username, password, history } = payload;\r\n\r\n    try {\r\n      const res = await fetch(\"/auth/register\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n\r\n      switch (res.status) {\r\n        case 200: {\r\n          history.push(\"/login\");\r\n          return {\r\n            type: \"USER_REGISTER_SUCCESS\",\r\n          };\r\n        }\r\n        case 400: {\r\n          const data = await res.json();\r\n          let errorMessages = {};\r\n          if (data.index === 0) errorMessages.username = data.message;\r\n          else errorMessages.password = data.message;\r\n          return {\r\n            type: \"USER_REGISTER_FAILED\",\r\n            payload: { errorMessages },\r\n          };\r\n        }\r\n        case 409: {\r\n          const errorMessage = await res.json();\r\n          return {\r\n            type: \"USER_REGISTER_FAILED\",\r\n            payload: { errorMessages: { username: errorMessage } },\r\n          };\r\n        }\r\n        case 500: {\r\n          return {\r\n            type: \"USER_REGISTER_FAILED\",\r\n            payload: {\r\n              errorMessages: { other: \"There is a problem with the Server\" },\r\n            },\r\n          };\r\n        }\r\n        default: {\r\n          return {\r\n            type: \"USER_REGISTER_FAILED\",\r\n            payload: {\r\n              errorMessages: { other: \"Something went Wrong\" },\r\n            },\r\n          };\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    return {\r\n      type: \"USER_REGISTER_FAILED\",\r\n      payload: {\r\n        errorMessages: { other: \"Something went Wrong\" },\r\n      },\r\n    };\r\n  });\r\n\r\n  yield put(newAction);\r\n}\r\n\r\n// logout the user\r\nexport function* userLogout() {\r\n  yield put({ type: \"USER_LOADING\" });\r\n  const result = yield call(async () => {\r\n    const data = { user: {}, errorMessage: \"\" };\r\n    try {\r\n      const res = await fetch(\"/auth/logout\");\r\n\r\n      if (res.status === 200) {\r\n        data.loggedIn = false;\r\n      }\r\n    } catch (err) {\r\n      console.log(`Error: ${err}`);\r\n      data.loggedIn = false;\r\n    }\r\n    return data;\r\n  });\r\n\r\n  yield put({ type: \"USER_LOGOUT_ASYNC\", ...result });\r\n}\r\n\r\n// check if the username is available\r\nexport function* checkUserName({ payload }) {\r\n  const newAction = yield call(async () => {\r\n    try {\r\n      const { username } = payload;\r\n\r\n      const res = await fetch(\"/auth/check/username\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ username }),\r\n      });\r\n\r\n      switch (res.status) {\r\n        case 200: {\r\n          const userAvailable = await res.json();\r\n          let errorMessages = {};\r\n          if (!userAvailable)\r\n            errorMessages = { username: `User ${username} Already exists` };\r\n          else errorMessages = { username: \"\", other: \"\" };\r\n          return {\r\n            type: \"CHECK_USERNAME_SUCCESS\",\r\n            payload: {\r\n              errorMessages,\r\n            },\r\n          };\r\n        }\r\n        case 500: {\r\n          return {\r\n            type: \"CHECK_USERNAME_FAILED\",\r\n            payload: {\r\n              errorMessage: { other: \"There is a problem with the Server\" },\r\n            },\r\n          };\r\n        }\r\n        default: {\r\n          return {\r\n            type: \"CHECK_USERNAME_FAILED\",\r\n            payload: { errorMessages: { other: \"Something went Wrong\" } },\r\n          };\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    return {\r\n      type: \"CHECK_USERNAME_FAILED\",\r\n      payload: { errorMessages: { other: \"Something went Wrong\" } },\r\n    };\r\n  });\r\n\r\n  yield put(newAction);\r\n}\r\n","import { put, call } from \"redux-saga/effects\";\r\n\r\nexport function* setRead({ payload }) {\r\n  let { friends, index } = payload;\r\n\r\n  const newAction = yield call(() => {\r\n    try {\r\n      // trying a methode send and not check if it is success (like facebook)\r\n      fetch(\"/chat/messageRead\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ friendName: friends[index].username }),\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    // just changing it locally\r\n    friends[index].unRead = false;\r\n    return { type: \"SET_FRIENDS\", payload: { friends } };\r\n  });\r\n\r\n  yield put(newAction);\r\n}\r\n","import { takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  checkLogin,\r\n  userLogin,\r\n  userLogout,\r\n  userRegister,\r\n  checkUserName,\r\n} from \"./authSaga\";\r\nimport { setRead } from \"./chatSaga\";\r\n\r\nexport default function* mySaga() {\r\n  // auth\r\n  yield takeLatest(\"CHECK_LOGIN\", checkLogin);\r\n  yield takeLatest(\"USER_REGISTER\", userRegister);\r\n  yield takeLatest(\"USER_LOGIN\", userLogin);\r\n  yield takeLatest(\"USER_LOGOUT\", userLogout);\r\n  yield takeLatest(\"CHECK_USERNAME\", checkUserName);\r\n\r\n  // chat\r\n  yield takeLatest(\"SET_READ\", setRead);\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./states/reducers/rootReducer\";\nimport mySaga from \"./states/sagas/sagas\";\nimport createSagaMiddleware from \"redux-saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nlet enhanser, store;\n\ntry {\n  enhanser = compose(\n    applyMiddleware(sagaMiddleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n  store = createStore(rootReducer, enhanser);\n} catch (err) {\n  store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n  console.log(err);\n}\n\nsagaMiddleware.run(mySaga);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}